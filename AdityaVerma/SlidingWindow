Sliding Window 

1> Video 5 -> Find All Anagrams in a String

class Solution(object):
    def findAnagrams(self, string, ptr):
        """
        :type s: str
        :type p: str
        :rtype: List[int]
        """
        k=len(ptr)
        d={}
        ans=[]

        counter=0
        for ele in ptr:
            if ele in d : 
                d[ele]+=1
            else : 
                d[ele]=1
                counter+=1
        i,j=0,0
        while j<len(string):
            if string[j] in d : 
                d[string[j]]-=1
                if d[string[j]]==0:
                    counter-=1
            if j-i+1<k:
                j+=1
            elif j-i+1==k:
                if counter==0:
                    ans.append(i)
                if string[i] in d : 
                    d[string[i]]+=1
                    if d[string[i]]==1:
                        counter+=1
                i+=1
                j+=1

        return ans
        
      ---------------------
      
     2> Video 6 -> Maximum sliding window 
     
     class Solution(object):
    def maxSlidingWindow(self, arr, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        i,j=0,0
        lst=[]
        res=[]
        while j< len(arr):
            if len(lst)==0:
                lst.append(arr[j])
            else : 
                while len(lst)!=0 and arr[j]>lst[-1]:
                    lst.pop()
                lst.append(arr[j])
            if j-i+1==k : 
                res.append(lst[0])
                if arr[i]==lst[0]:
                    lst.pop(0)
                
                i+=1
            j+=1

        return res
        
     
     
     Video 10 ->  Longest Substring With K Unique Characters
     
        i,j=0,0
        d={}
        maxLen=-1
        
        while j< len(arr):
            if arr[j] not in d :
                d[arr[j]]=1
            else:
                d[arr[j]]+=1
            if len(d)==k :
                maxLen=max(maxLen,j-i+1)
            elif len(d)>k:
                while len(d)>k:
                    d[arr[i]]-=1
                    if d[arr[i]]==0:
                        del d[arr[i]]
                    i+=1
            j+=1

        return (maxLen)
        
        

